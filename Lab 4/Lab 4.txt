/****** Select Statements for Lab 4  ******/
-- 1.  Select all of the customers who live in NY state

SELECT *
FROM Customers
WHERE State='NY';

-- 2.  Select all of the states that start with A 

SELECT * FROM Customers
WHERE State LIKE 'A_';

-- 3.  Select all of the Products that have a price between 50 and 60 dollars

SELECT * FROM Products
WHERE UnitPrice > 50 AND UnitPrice < 60;

-- 4.  Show me the value of the inventory that we have on hand for each product

I think what's being asked here is to get the total value of the entire quantity of each product? So I'm calculating that.

SELECT Products.ProductCode,
       Products.Description,
	   (Products.UnitPrice * Products.OnHandQuantity) AS InventoryValue
FROM Products;

-- 5.  Get me a list of the invoices in April, May or June

SELECT * FROM Invoices
WHERE MONTH(InvoiceDate) = 4
OR    MONTH(InvoiceDate) = 5
OR    MONTH(InvoiceDate) = 6;

-- 6.  Get me a list of the invoices in Jan or April

SELECT * FROM Invoices
WHERE MONTH(InvoiceDate) = 1
OR    MONTH(InvoiceDate) = 4;

-- 7.  Add the name of the state to the result set from #1

SELECT Customers.CustomerID, Name, Address, City, States.StateName, ZipCode
FROM Customers
INNER JOIN States
ON Customers.State = States.StateCode;

-- 8.  Add the customer's name to the result set from #5

SELECT Invoices.*, Customers.Name
FROM Invoices
    INNER JOIN Customers
        ON Invoices.CustomerID = Customers.CustomerID

WHERE MONTH(InvoiceDate) = 4
OR    MONTH(InvoiceDate) = 5
OR    MONTH(InvoiceDate) = 6;

-- 9.  Get me a list of all of the products that have been ordered.  Include the quantity ordered on each invoice.

SELECT Products.ProductCode,
       Products.Description,
       SUM(InvoiceLineItems.Quantity) AS QuantityOrdered
FROM Products

INNER JOIN InvoiceLineItems
     ON Products.ProductCode = InvoiceLineItems.ProductCode

GROUP BY Products.ProductCode, Products.Description;

-- 10. Get me a list of all of the invoices.  Include all of the items ordered on the invoice, including the detailed information about each product.
--     You'll have more than one record for each invoice.

SELECT Invoices.*, InvoiceLineItems.Quantity, Products.*
FROM Invoices

INNER JOIN InvoiceLineItems
     ON InvoiceLineItems.InvoiceID = Invoices.InvoiceID

INNER JOIN Products
     ON InvoiceLineItems.ProductCode = Products.ProductCode;

-- 11. Add the customer's name and address to the results from 10.

SELECT Invoices.*, InvoiceLineItems.Quantity, Products.*, Customers.Name, Customers.Address
FROM Invoices

INNER JOIN InvoiceLineItems
     ON InvoiceLineItems.InvoiceID = Invoices.InvoiceID

INNER JOIN Products
     ON InvoiceLineItems.ProductCode = Products.ProductCode

INNER JOIN Customers
     ON Customers.CustomerID = Invoices.CustomerID;

-- 12. Add the name of the state to the results from 11.

SELECT Invoices.*, InvoiceLineItems.Quantity, Products.*, Customers.Name, Customers.Address, States.StateName
FROM Invoices

INNER JOIN InvoiceLineItems
     ON InvoiceLineItems.InvoiceID = Invoices.InvoiceID

INNER JOIN Products
     ON InvoiceLineItems.ProductCode = Products.ProductCode

INNER JOIN Customers
     ON Customers.CustomerID = Invoices.CustomerID

INNER JOIN States
     ON Customers.State = States.StateCode;

-- 13. How many products do we have?

I'm not sure if 13 - 16 is building off of  the results from 12, so I'm just going to
assume these are all independent. I got 16 using this query:

SELECT COUNT(*) FROM Products;

-- 14. What's the total value of all of the products sold?

I got $4431.775, or $4431.78 when rounded to the nearest hundredth using this query:

SELECT SUM(Invoices.InvoiceTotal) FROM Invoices;

-- 15. What's the total value of all of the inventory we have on hand?

$3,018,024.50 for me, using the following query:

SELECT SUM(Products.OnHandQuantity * Products.UnitPrice) FROM Products;

-- 16. How many orders has each customer placed?  EXTRA CREDIT:  List all customers, even if they don't have any orders.

SELECT Customers.Name, SUM(InvoiceLineItems.Quantity)
FROM Customers

RIGHT JOIN Invoices
     ON Invoices.CustomerID = Customers.CustomerID

RIGHT JOIN InvoiceLineItems
     ON InvoiceLineItems.InvoiceID = Invoices.InvoiceID

GROUP BY Customers.Name;
